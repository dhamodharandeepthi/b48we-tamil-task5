1.Do the below programs in anonymous function & IIFE
  a. print odd numbers in an array
  b. convert all the strings to title caps in a string array
  c. sum of all numbers in an array 
  d. return all the prime numbers in an array
  e. return all the palindromes in an array
  f. return median of sorted arrays of the same size
  g. remove duplicates from an array
  h. rotate an array by k times


a. Print odd numbers in an array:

javascript
Copy code
// Anonymous Function
const printOddNumbers = function(arr) {
  arr.forEach(function(num) {
    if (num % 2 !== 0) {
      console.log(num);
    }
  });
};

// IIFE
(function(arr) {
  arr.forEach(function(num) {
    if (num % 2 !== 0) {
      console.log(num);
    }
  });
})([1, 2, 3, 4, 5]);
Explanation:


b. Convert all the strings to title caps in a string array:

javascript
Copy code
// Anonymous Function
const convertToTitleCaps = function(arr) {
  const result = arr.map(function(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  });
  console.log(result);
};

// IIFE
(function(arr) {
  const result = arr.map(function(str) {
    return str.charAt(0).toUpperCase() + str.slice(1);
  });
  console.log(result);
})(['hello', 'world', 'javascript']);
Explanation:


c. Sum of all numbers in an array:

javascript
Copy code
// Anonymous Function
const calculateSum = function(arr) {
  let sum = 0;
  arr.forEach(function(num) {
    sum += num;
  });
  console.log(sum);
};

// IIFE
(function(arr) {
  let sum = 0;
  arr.forEach(function(num) {
    sum += num;
  });
  console.log(sum);
})([1, 2, 3, 4, 5]);

d. Return all the prime numbers in an array:

javascript
Copy code
// Anonymous Function
const getPrimeNumbers = function(arr) {
  const isPrime = function(num) {
    for (let i = 2, sqrt = Math.sqrt(num); i <= sqrt; i++) {
      if (num % i === 0) {
        return false;
      }
    }
    return num > 1;
  };

  const primes = arr.filter(function(num) {
    return isPrime(num);
  });

  console.log(primes);
};

// IIFE
(function(arr) {
  const isPrime = function(num) {
    for (let i = 2, sqrt = Math.sqrt(num); i <= sqrt; i++) {
      if (num % i === 0) {
        return false;
      }
    }
    return num > 1;
  };

  const primes = arr.filter(function(num) {
    return isPrime(num);
  });

  console.log(primes);
})([2, 3, 4, 5, 6, 7, 8, 9, 10]);

e. Return all the palindromes in an array:

javascript
Copy code
// Anonymous Function
const getPalindromes = function(arr) {
  const isPalindrome = function(str) {
    const reversedStr = str.split('').reverse().join('');
    return str === reversedStr;
  };

  const palindromes = arr.filter(function(str) {
    return isPalindrome(str);
  });

  console.log(palindromes);
};

// IIFE
(function(arr) {
  const isPalindrome = function(str) {
    const reversedStr = str.split('').reverse().join('');
    return str === reversedStr;
  };

  const palindromes = arr.filter(function(str) {
    return isPalindrome(str);
  });

  console.log(palindromes);
})(['madam', 'hello', 'level', 'world']);

f. Return median of sorted arrays of the same size:

javascript
Copy code
// Anonymous Function
const getMedian = function(arr1, arr2) {
  const mergedArray = arr1.concat(arr2);
  const sortedArray = mergedArray.sort((a, b) => a - b);
  const midIndex = Math.floor(sortedArray.length / 2);

  if (sortedArray.length % 2 === 0) {
    const median = (sortedArray[midIndex - 1] + sortedArray[midIndex]) / 2;
    console.log(median);
  } else {
    console.log(sortedArray[midIndex]);
  }
};

// IIFE
(function(arr1, arr2) {
  const mergedArray = arr1.concat(arr2);
  const sortedArray = mergedArray.sort((a, b) => a - b);
  const midIndex = Math.floor(sortedArray.length / 2);

  if (sortedArray.length % 2 === 0) {
    const median = (sortedArray[midIndex - 1] + sortedArray[midIndex]) / 2;
    console.log(median);
  } else {
    console.log(sortedArray[midIndex]);
  }
})([1, 3, 5], [2, 4, 6]);

g. Remove duplicates from an array:

javascript
Copy code
// Anonymous Function
const removeDuplicates = function(arr) {
  const uniqueArray = arr.filter(function(item, index) {
    return arr.indexOf(item) === index;
  });

  console.log(uniqueArray);
};

// IIFE
(function(arr) {
  const uniqueArray = arr.filter(function(item, index) {
    return arr.indexOf(item) === index;
  });

  console.log(uniqueArray);
})([1, 2, 2, 3, 4, 4, 5]);

h. Rotate an array by k times:

javascript
Copy code
// Anonymous Function
const rotateArray = function(arr, k) {
  const rotations = k % arr.length;
  const rotatedArray = arr.slice(rotations).concat(arr.slice(0, rotations));

  console.log(rotatedArray);
};

// IIFE
(function(arr, k) {
  const rotations = k % arr.length;
  const rotatedArray = arr.slice(rotations).concat(arr.slice(0, rotations));

  console.log(rotatedArray);
})([1, 2, 3, 4, 5], 2);





